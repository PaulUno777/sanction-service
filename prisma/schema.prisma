// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Relationship {
  nature            String?
  defaultName       String?
  type              String?
  alias             String[]
  gender            String?
  positions         String?
  notes             String[]
  deathDate         String?
  dateOfBirth       DateObject?
  incorporationDate DateObject?
  placeOfBirth      PlaceOfBirth?
  nationalities     Nationality[]
  citizenships      Citizenship[]
}

model PoliticallyExposed {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  firstName         String?
  lastName          String?
  defaultName       String?
  alias             String[]
  type              String?
  gender            String?
  positions         String[]
  notes             String[]
  dateOfBirth       DateObject?
  incorporationDate DateObject?
  placeOfBirth      String[]
  websites          String?
  publicationUrl    String?

  addresses     Address[]
  nationalities Nationality[]
  citizenships  Citizenship[]
  othersInfos   Info[]
  relationships Relationship[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model SanctionList {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name            String
  publicationDate DateTime? @db.Date
  sourceUrl       String?
  importRate      String?   @default("Weekly")

  lastImported      DateTime @default(now())
  sourceLastUpdated DateTime @default(now())

  santioned Sanctioned[]
}

model Sanctioned {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  Sanction SanctionList @relation(fields: [listId], references: [id])
  listId   String       @db.ObjectId

  firstName      String?
  middleName     String?
  lastName       String?
  defaultName    String?
  gender         Gender?
  type           String?
  akas           String[]      @default([])
  dateOfBirth    DateObject?
  placeOfBirth   PlaceOfBirth?
  title          String?
  remarks        String?
  programs       String[]      @default([])
  references     String[]      @default([])
  publicationUrl String?

  addresses     Address[]
  nationalities Nationality[]
  citizenships  Citizenship[]
  othersInfos   Info[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

type Info {
  type           String?
  value          String?
  comment        String?
  issueDate      String?
  expirationDate String?
}

type Nationality {
  isoCode String?
  country String?
}

type Citizenship {
  isoCode String?
  country String?
}

enum Gender {
  Male
  Female
  Unknown
  MALE
  FEMALE
}

type Country {
  isoCode String?
  name    String?
}

type DateObject {
  day   String?
  month String?
  year  String?
}

type PlaceOfBirth {
  place           String?
  stateOrProvince String?
  postalCode      String?
  country         Country?
}

type Address {
  place           String?
  stateOrProvince String?
  postalCode      String?
  country         Country?
}
